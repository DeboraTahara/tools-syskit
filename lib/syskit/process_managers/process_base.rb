# frozen_string_literal: true

module Syskit
    module ProcessManagers
        # Interface for processes, that is the representation of a running deployment
        #
        # This is the interface needed by {Deployment}
        class ProcessBase
            # The deployment name
            attr_reader :name

            # The deployment model
            attr_reader :model

            def initialize(name, model)
                @name = name
                @model = model
                @name_mappings = {}
            end

            # Require that to rename the task called +old+ in this deployment to
            # +new+ during execution
            #
            # @see name_mappings name_mappings=
            def map_name(old, new)
                @name_mappings[old] = new
            end

            # @api private
            #
            # use a mapping if exists
            def mapped_name_of(name)
                @name_mappings[name] || name
            end

            # Returns the name of the tasks that are running in this process
            #
            # See also #each_task
            def mapped_task_names
                unless model
                    raise Orocos::NotOrogenComponent,
                          "#{name} does not seem to have been generated by orogen"
                end

                model.task_activities.map do |deployed_task|
                    name = deployed_task.name
                    mapped_name_of(name)
                end
            end
        end
    end
end
